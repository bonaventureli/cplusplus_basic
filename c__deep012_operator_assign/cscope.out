cscope 15 $HOME/Documents/cplusplus_basic/c__deep012_operator_assign -q 0000000378 0000044095
	@build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c

1 #ifdeà
__ýlu¥lus


8 #ià
defšed
(
__18CXX
)

9 
	#ID_VOID_MAIN


	)

12 #ià
defšed
(
__INTEL_COMPILER
è|| defšed(
__ICC
)

13 
	#COMPILER_ID
 "IÁ–"

	)

15 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_COMPILER
/100)

	)

16 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_COMPILER
/10 % 10)

	)

17 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER
 % 10)

	)

18 #ià
defšed
(
__INTEL_COMPILER_BUILD_DATE
)

20 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__INTEL_COMPILER_BUILD_DATE
)

	)

23 #–ià
defšed
(
__PATHCC__
)

24 
	#COMPILER_ID
 "P©hSÿË"

	)

25 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PATHCC__
)

	)

26 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PATHCC_MINOR__
)

	)

27 #ià
defšed
(
__PATHCC_PATCHLEVEL__
)

28 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PATHCC_PATCHLEVEL__
)

	)

31 #–ià
defšed
(
__þªg__
)

32 
	#COMPILER_ID
 "CÏng"

	)

33 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__þªg_majÜ__
)

	)

34 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__þªg_mšÜ__
)

	)

35 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__þªg_·tchËv–__
)

	)

37 #–ià
defšed
(
__BORLANDC__
è&& defšed(
__CODEGEARC_VERSION__
)

38 
	#COMPILER_ID
 "Emb¬ÿd”o"

	)

39 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>24 & 0x00FF)

	)

40 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>16 & 0x00FF)

	)

41 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__CODEGEARC_VERSION__
 & 0xFFFF)

	)

43 #–ià
defšed
(
__BORLANDC__
)

44 
	#COMPILER_ID
 "BÜÏnd"

	)

46 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__BORLANDC__
>>8)

	)

47 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__BORLANDC__
 & 0xFF)

	)

49 #–ià
defšed
(
__WATCOMC__
)

50 
	#COMPILER_ID
 "W©com"

	)

52 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__WATCOMC__
 / 100)

	)

53 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__WATCOMC__
 % 100)

	)

55 #–ià
defšed
(
__SUNPRO_C
)

56 
	#COMPILER_ID
 "SunPro"

	)

57 #ià
__SUNPRO_C
 >= 0x5100

59 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_C
>>12)

	)

60 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_C
>>4 & 0xFF)

	)

61 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_C
 & 0xF)

	)

64 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_C
>>8)

	)

65 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_C
>>4 & 0xF)

	)

66 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_C
 & 0xF)

	)

69 #–ià
defšed
(
__HP_cc
)

70 
	#COMPILER_ID
 "HP"

	)

72 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__HP_cc
/10000)

	)

73 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__HP_cc
/100 % 100)

	)

74 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__HP_cc
 % 100)

	)

76 #–ià
defšed
(
__DECC
)

77 
	#COMPILER_ID
 "Com·q"

	)

79 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__DECC_VER
/10000000)

	)

80 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__DECC_VER
/100000 % 100)

	)

81 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__DECC_VER
 % 10000)

	)

83 #–ià
defšed
(
__IBMC__
)

84 #ià
defšed
(
__COMPILER_VER__
)

85 
	#COMPILER_ID
 "zOS"

	)

87 #ià
__IBMC__
 >= 800

88 
	#COMPILER_ID
 "XL"

	)

90 
	#COMPILER_ID
 "Visu®Age"

	)

93 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMC__
/100)

	)

94 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMC__
/10 % 10)

	)

95 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMC__
 % 10)

	)

98 #–ià
defšed
(
__PGI
)

99 
	#COMPILER_ID
 "PGI"

	)

100 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PGIC__
)

	)

101 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PGIC_MINOR__
)

	)

102 #ià
defšed
(
__PGIC_PATCHLEVEL__
)

103 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PGIC_PATCHLEVEL__
)

	)

106 #–ià
defšed
(
_CRAYC
)

107 
	#COMPILER_ID
 "C¿y"

	)

108 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_RELEASE
)

	)

109 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_RELEASE_MINOR
)

	)

111 #–ià
defšed
(
__TI_COMPILER_VERSION__
)

112 
	#COMPILER_ID
 "TI"

	)

114 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000000)

	)

115 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000 % 1000)

	)

116 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__TI_COMPILER_VERSION__
 % 1000)

	)

118 #–ià
defšed
(
__TINYC__
)

119 
	#COMPILER_ID
 "TšyCC"

	)

121 #–ià
defšed
(
__SCO_VERSION__
)

122 
	#COMPILER_ID
 "SCO"

	)

124 #–ià
defšed
(
__GNUC__
)

125 
	#COMPILER_ID
 "GNU"

	)

126 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

127 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

128 #ià
defšed
(
__GNUC_PATCHLEVEL__
)

129 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

132 #–ià
defšed
(
_MSC_VER
)

133 
	#COMPILER_ID
 "MSVC"

	)

135 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

136 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

137 #ià
defšed
(
_MSC_FULL_VER
)

138 #ià
_MSC_VER
 >= 1400

140 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 100000)

	)

143 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 10000)

	)

146 #ià
defšed
(
_MSC_BUILD
)

147 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
_MSC_BUILD
)

	)

151 #–ià
defšed
(
__VISUALDSPVERSION__
)

152 
	#COMPILER_ID
 "ADSP"

	)

154 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__VISUALDSPVERSION__
>>24)

	)

155 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__VISUALDSPVERSION__
>>16 & 0xFF)

	)

156 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__VISUALDSPVERSION__
>>8 & 0xFF)

	)

159 #–ià
defšed
(
__ADSPBLACKFIN__
è|| defšed(
__ADSPTS__
è|| defšed(
__ADSP21000__
)

160 
	#COMPILER_ID
 "ADSP"

	)

164 #–ià
defšed
(
__IAR_SYSTEMS_ICC__
 ) || defšed(
__IAR_SYSTEMS_ICC
)

165 
	#COMPILER_ID
 "IAR"

	)

169 #–ià
defšed
(
SDCC
)

170 
	#COMPILER_ID
 "SDCC"

	)

172 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
SDCC
/100)

	)

173 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
SDCC
/10 % 10)

	)

174 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
SDCC
 % 10)

	)

176 #–ià
defšed
(
_SGI_COMPILER_VERSION
è|| defšed(
_COMPILER_VERSION
)

177 
	#COMPILER_ID
 "MIPS´o"

	)

178 #ià
defšed
(
_SGI_COMPILER_VERSION
)

180 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/100)

	)

181 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/10 % 10)

	)

182 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_SGI_COMPILER_VERSION
 % 10)

	)

185 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_COMPILER_VERSION
/100)

	)

186 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_COMPILER_VERSION
/10 % 10)

	)

187 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_COMPILER_VERSION
 % 10)

	)

193 #–ià
defšed
(
__sgi
)

194 
	#COMPILER_ID
 "MIPS´o"

	)

196 #–ià
defšed
(
__hpux
è|| defšed(
__hpua
)

197 
	#COMPILER_ID
 "HP"

	)

200 
	#COMPILER_ID
 ""

	)

208 cÚ¡* 
	gšfo_compž”
 = "INFO" ":" "compž”[" 
COMPILER_ID
 "]";

211 #ià
defšed
(
__lšux
è|| defšed(
__lšux__
è|| defšed(
lšux
)

212 
	#PLATFORM_ID
 "Lšux"

	)

214 #–ià
defšed
(
__CYGWIN__
)

215 
	#PLATFORM_ID
 "Cygwš"

	)

217 #–ià
defšed
(
__MINGW32__
)

218 
	#PLATFORM_ID
 "MšGW"

	)

220 #–ià
defšed
(
__APPLE__
)

221 
	#PLATFORM_ID
 "D¬wš"

	)

223 #–ià
defšed
(
_WIN32
è|| defšed(
__WIN32__
è|| defšed(
WIN32
)

224 
	#PLATFORM_ID
 "Wšdows"

	)

226 #–ià
defšed
(
__F»eBSD__
è|| defšed(
__F»eBSD
)

227 
	#PLATFORM_ID
 "F»eBSD"

	)

229 #–ià
defšed
(
__N‘BSD__
è|| defšed(
__N‘BSD
)

230 
	#PLATFORM_ID
 "N‘BSD"

	)

232 #–ià
defšed
(
__O³nBSD__
è|| defšed(
__OPENBSD
)

233 
	#PLATFORM_ID
 "O³nBSD"

	)

235 #–ià
defšed
(
__sun
è|| defšed(
sun
)

236 
	#PLATFORM_ID
 "SunOS"

	)

238 #–ià
defšed
(
_AIX
è|| defšed(
__AIX
è|| defšed(
__AIX__
è|| defšed(
__aix
è|| defšed(
__aix__
)

239 
	#PLATFORM_ID
 "AIX"

	)

241 #–ià
defšed
(
__sgi
è|| defšed(
__sgi__
è|| defšed(
_SGI
)

242 
	#PLATFORM_ID
 "IRIX"

	)

244 #–ià
defšed
(
__hpux
è|| defšed(
__hpux__
)

245 
	#PLATFORM_ID
 "HP-UX"

	)

247 #–ià
defšed
(
__HAIKU__
)

248 
	#PLATFORM_ID
 "Haiku"

	)

250 #–ià
defšed
(
__BeOS
è|| defšed(
__BEOS__
è|| defšed(
_BEOS
)

251 
	#PLATFORM_ID
 "BeOS"

	)

253 #–ià
defšed
(
__QNX__
è|| defšed(
__QNXNTO__
)

254 
	#PLATFORM_ID
 "QNX"

	)

256 #–ià
defšed
(
__Œu64
è|| defšed(
_Œu64
è|| defšed(
__TRU64__
)

257 
	#PLATFORM_ID
 "Tru64"

	)

259 #–ià
defšed
(
__riscos
è|| defšed(
__riscos__
)

260 
	#PLATFORM_ID
 "RISCos"

	)

262 #–ià
defšed
(
__sšix
è|| defšed(
__sšix__
è|| defšed(
__SINIX__
)

263 
	#PLATFORM_ID
 "SINIX"

	)

265 #–ià
defšed
(
__UNIX_SV__
)

266 
	#PLATFORM_ID
 "UNIX_SV"

	)

268 #–ià
defšed
(
__bsdos__
)

269 
	#PLATFORM_ID
 "BSDOS"

	)

271 #–ià
defšed
(
_MPRAS
è|| defšed(
MPRAS
)

272 
	#PLATFORM_ID
 "MP-RAS"

	)

274 #–ià
defšed
(
__osf
è|| defšed(
__osf__
)

275 
	#PLATFORM_ID
 "OSF1"

	)

277 #–ià
defšed
(
_SCO_SV
è|| defšed(
SCO_SV
è|| defšed(
sco_sv
)

278 
	#PLATFORM_ID
 "SCO_SV"

	)

280 #–ià
defšed
(
__uÉrix
è|| defšed(
__uÉrix__
è|| defšed(
_ULTRIX
)

281 
	#PLATFORM_ID
 "ULTRIX"

	)

283 #–ià
defšed
(
__XENIX__
è|| defšed(
_XENIX
è|| defšed(
XENIX
)

284 
	#PLATFORM_ID
 "X’ix"

	)

287 
	#PLATFORM_ID
 ""

	)

296 #ià
defšed
(
_WIN32
è&& defšed(
_MSC_VER
)

297 #ià
defšed
(
_M_IA64
)

298 
	#ARCHITECTURE_ID
 "IA64"

	)

300 #–ià
defšed
(
_M_X64
è|| defšed(
_M_AMD64
)

301 
	#ARCHITECTURE_ID
 "x64"

	)

303 #–ià
defšed
(
_M_IX86
)

304 
	#ARCHITECTURE_ID
 "X86"

	)

306 #–ià
defšed
(
_M_ARM
)

307 
	#ARCHITECTURE_ID
 "ARM"

	)

309 #–ià
defšed
(
_M_MIPS
)

310 
	#ARCHITECTURE_ID
 "MIPS"

	)

312 #–ià
defšed
(
_M_SH
)

313 
	#ARCHITECTURE_ID
 "SHx"

	)

316 
	#ARCHITECTURE_ID
 ""

	)

320 
	#ARCHITECTURE_ID
 ""

	)

324 
	#DEC
(
n
) \

325 ('0' + (((
n
) / 10000000)%10)), \

326 ('0' + (((
n
) / 1000000)%10)), \

327 ('0' + (((
n
) / 100000)%10)), \

328 ('0' + (((
n
) / 10000)%10)), \

329 ('0' + (((
n
) / 1000)%10)), \

330 ('0' + (((
n
) / 100)%10)), \

331 ('0' + (((
n
) / 10)%10)), \

332 ('0' + ((
n
è% 10))

	)

335 
	#HEX
(
n
) \

336 ('0' + ((
n
)>>28 & 0xF)), \

337 ('0' + ((
n
)>>24 & 0xF)), \

338 ('0' + ((
n
)>>20 & 0xF)), \

339 ('0' + ((
n
)>>16 & 0xF)), \

340 ('0' + ((
n
)>>12 & 0xF)), \

341 ('0' + ((
n
)>>8 & 0xF)), \

342 ('0' + ((
n
)>>4 & 0xF)), \

343 ('0' + ((
n
è& 0xF))

	)

346 #ifdeà
COMPILER_VERSION_MAJOR


347 cÚ¡ 
	gšfo_v”siÚ
[] = {

350 
COMPILER_VERSION_MAJOR
,

351 #ifdeà
COMPILER_VERSION_MINOR


352 '.', 
COMPILER_VERSION_MINOR
,

353 #ifdeà
COMPILER_VERSION_PATCH


354 '.', 
COMPILER_VERSION_PATCH
,

355 #ifdeà
COMPILER_VERSION_TWEAK


356 '.', 
COMPILER_VERSION_TWEAK
,

367 cÚ¡* 
	gšfo_¶©fÜm
 = "INFO" ":" "¶©fÜm[" 
PLATFORM_ID
 "]";

368 cÚ¡* 
	gšfo_¬ch
 = "INFO" ":" "¬ch[" 
ARCHITECTURE_ID
 "]";

374 #ifdeà
ID_VOID_MAIN


375 
	$maš
(è{
	}
}

377 
	$maš
(
¬gc
, * 
¬gv
[])

379 
»quœe
 = 0;

380 
»quœe
 +ð
šfo_compž”
[
¬gc
];

381 
»quœe
 +ð
šfo_¶©fÜm
[
¬gc
];

382 
»quœe
 +ð
šfo_¬ch
[
¬gc
];

383 #ifdeà
COMPILER_VERSION_MAJOR


384 
»quœe
 +ð
šfo_v”siÚ
[
¬gc
];

386 ()
¬gv
;

387  
»quœe
;

388 
	}
}

	@build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp

4 #iâdeà
__ýlu¥lus


11 #ià
defšed
(
__COMO__
)

12 
	#COMPILER_ID
 "Com—u"

	)

14 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__COMO_VERSION__
 / 100)

	)

15 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__COMO_VERSION__
 % 100)

	)

17 #–ià
defšed
(
__INTEL_COMPILER
è|| defšed(
__ICC
)

18 
	#COMPILER_ID
 "IÁ–"

	)

20 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_COMPILER
/100)

	)

21 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_COMPILER
/10 % 10)

	)

22 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER
 % 10)

	)

23 #ià
defšed
(
__INTEL_COMPILER_BUILD_DATE
)

25 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__INTEL_COMPILER_BUILD_DATE
)

	)

28 #–ià
defšed
(
__PATHCC__
)

29 
	#COMPILER_ID
 "P©hSÿË"

	)

30 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PATHCC__
)

	)

31 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PATHCC_MINOR__
)

	)

32 #ià
defšed
(
__PATHCC_PATCHLEVEL__
)

33 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PATHCC_PATCHLEVEL__
)

	)

36 #–ià
defšed
(
__þªg__
)

37 
	#COMPILER_ID
 "CÏng"

	)

38 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__þªg_majÜ__
)

	)

39 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__þªg_mšÜ__
)

	)

40 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__þªg_·tchËv–__
)

	)

42 #–ià
defšed
(
__BORLANDC__
è&& defšed(
__CODEGEARC_VERSION__
)

43 
	#COMPILER_ID
 "Emb¬ÿd”o"

	)

44 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>24 & 0x00FF)

	)

45 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>16 & 0x00FF)

	)

46 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__CODEGEARC_VERSION__
 & 0xFFFF)

	)

48 #–ià
defšed
(
__BORLANDC__
)

49 
	#COMPILER_ID
 "BÜÏnd"

	)

51 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__BORLANDC__
>>8)

	)

52 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__BORLANDC__
 & 0xFF)

	)

54 #–ià
defšed
(
__WATCOMC__
)

55 
	#COMPILER_ID
 "W©com"

	)

57 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__WATCOMC__
 / 100)

	)

58 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__WATCOMC__
 % 100)

	)

60 #–ià
defšed
(
__SUNPRO_CC
)

61 
	#COMPILER_ID
 "SunPro"

	)

62 #ià
__SUNPRO_CC
 >= 0x5100

64 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_CC
>>12)

	)

65 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_CC
>>4 & 0xFF)

	)

66 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_CC
 & 0xF)

	)

69 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_CC
>>8)

	)

70 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_CC
>>4 & 0xF)

	)

71 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_CC
 & 0xF)

	)

74 #–ià
defšed
(
__HP_aCC
)

75 
	#COMPILER_ID
 "HP"

	)

77 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__HP_aCC
/10000)

	)

78 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__HP_aCC
/100 % 100)

	)

79 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__HP_aCC
 % 100)

	)

81 #–ià
defšed
(
__DECCXX
)

82 
	#COMPILER_ID
 "Com·q"

	)

84 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__DECCXX_VER
/10000000)

	)

85 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__DECCXX_VER
/100000 % 100)

	)

86 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__DECCXX_VER
 % 10000)

	)

88 #–ià
defšed
(
__IBMCPP__
)

89 #ià
defšed
(
__COMPILER_VER__
)

90 
	#COMPILER_ID
 "zOS"

	)

92 #ià
__IBMCPP__
 >= 800

93 
	#COMPILER_ID
 "XL"

	)

95 
	#COMPILER_ID
 "Visu®Age"

	)

98 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

99 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

100 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

103 #–ià
defšed
(
__PGI
)

104 
	#COMPILER_ID
 "PGI"

	)

105 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PGIC__
)

	)

106 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PGIC_MINOR__
)

	)

107 #ià
defšed
(
__PGIC_PATCHLEVEL__
)

108 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PGIC_PATCHLEVEL__
)

	)

111 #–ià
defšed
(
_CRAYC
)

112 
	#COMPILER_ID
 "C¿y"

	)

113 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_RELEASE
)

	)

114 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_RELEASE_MINOR
)

	)

116 #–ià
defšed
(
__TI_COMPILER_VERSION__
)

117 
	#COMPILER_ID
 "TI"

	)

119 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000000)

	)

120 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000 % 1000)

	)

121 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__TI_COMPILER_VERSION__
 % 1000)

	)

123 #–ià
defšed
(
__SCO_VERSION__
)

124 
	#COMPILER_ID
 "SCO"

	)

126 #–ià
defšed
(
__GNUC__
)

127 
	#COMPILER_ID
 "GNU"

	)

128 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

129 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

130 #ià
defšed
(
__GNUC_PATCHLEVEL__
)

131 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

134 #–ià
defšed
(
_MSC_VER
)

135 
	#COMPILER_ID
 "MSVC"

	)

137 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

138 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

139 #ià
defšed
(
_MSC_FULL_VER
)

140 #ià
_MSC_VER
 >= 1400

142 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 100000)

	)

145 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 10000)

	)

148 #ià
defšed
(
_MSC_BUILD
)

149 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
_MSC_BUILD
)

	)

153 #–ià
defšed
(
__VISUALDSPVERSION__
)

154 
	#COMPILER_ID
 "ADSP"

	)

156 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__VISUALDSPVERSION__
>>24)

	)

157 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__VISUALDSPVERSION__
>>16 & 0xFF)

	)

158 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__VISUALDSPVERSION__
>>8 & 0xFF)

	)

161 #–ià
defšed
(
__ADSPBLACKFIN__
è|| defšed(
__ADSPTS__
è|| defšed(
__ADSP21000__
)

162 
	#COMPILER_ID
 "ADSP"

	)

166 #–ià
defšed
(
__IAR_SYSTEMS_ICC__
 ) || defšed(
__IAR_SYSTEMS_ICC
)

167 
	#COMPILER_ID
 "IAR"

	)

169 #–ià
defšed
(
_SGI_COMPILER_VERSION
è|| defšed(
_COMPILER_VERSION
)

170 
	#COMPILER_ID
 "MIPS´o"

	)

171 #ià
defšed
(
_SGI_COMPILER_VERSION
)

173 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/100)

	)

174 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/10 % 10)

	)

175 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_SGI_COMPILER_VERSION
 % 10)

	)

178 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_COMPILER_VERSION
/100)

	)

179 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_COMPILER_VERSION
/10 % 10)

	)

180 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_COMPILER_VERSION
 % 10)

	)

186 #–ià
defšed
(
__sgi
)

187 
	#COMPILER_ID
 "MIPS´o"

	)

189 #–ià
defšed
(
__hpux
è|| defšed(
__hpua
)

190 
	#COMPILER_ID
 "HP"

	)

193 
	#COMPILER_ID
 ""

	)

201 cÚ¡* 
	gšfo_compž”
 = "INFO" ":" "compž”[" 
COMPILER_ID
 "]";

204 #ià
defšed
(
__lšux
è|| defšed(
__lšux__
è|| defšed(
lšux
)

205 
	#PLATFORM_ID
 "Lšux"

	)

207 #–ià
defšed
(
__CYGWIN__
)

208 
	#PLATFORM_ID
 "Cygwš"

	)

210 #–ià
defšed
(
__MINGW32__
)

211 
	#PLATFORM_ID
 "MšGW"

	)

213 #–ià
defšed
(
__APPLE__
)

214 
	#PLATFORM_ID
 "D¬wš"

	)

216 #–ià
defšed
(
_WIN32
è|| defšed(
__WIN32__
è|| defšed(
WIN32
)

217 
	#PLATFORM_ID
 "Wšdows"

	)

219 #–ià
defšed
(
__F»eBSD__
è|| defšed(
__F»eBSD
)

220 
	#PLATFORM_ID
 "F»eBSD"

	)

222 #–ià
defšed
(
__N‘BSD__
è|| defšed(
__N‘BSD
)

223 
	#PLATFORM_ID
 "N‘BSD"

	)

225 #–ià
defšed
(
__O³nBSD__
è|| defšed(
__OPENBSD
)

226 
	#PLATFORM_ID
 "O³nBSD"

	)

228 #–ià
defšed
(
__sun
è|| defšed(
sun
)

229 
	#PLATFORM_ID
 "SunOS"

	)

231 #–ià
defšed
(
_AIX
è|| defšed(
__AIX
è|| defšed(
__AIX__
è|| defšed(
__aix
è|| defšed(
__aix__
)

232 
	#PLATFORM_ID
 "AIX"

	)

234 #–ià
defšed
(
__sgi
è|| defšed(
__sgi__
è|| defšed(
_SGI
)

235 
	#PLATFORM_ID
 "IRIX"

	)

237 #–ià
defšed
(
__hpux
è|| defšed(
__hpux__
)

238 
	#PLATFORM_ID
 "HP-UX"

	)

240 #–ià
defšed
(
__HAIKU__
)

241 
	#PLATFORM_ID
 "Haiku"

	)

243 #–ià
defšed
(
__BeOS
è|| defšed(
__BEOS__
è|| defšed(
_BEOS
)

244 
	#PLATFORM_ID
 "BeOS"

	)

246 #–ià
defšed
(
__QNX__
è|| defšed(
__QNXNTO__
)

247 
	#PLATFORM_ID
 "QNX"

	)

249 #–ià
defšed
(
__Œu64
è|| defšed(
_Œu64
è|| defšed(
__TRU64__
)

250 
	#PLATFORM_ID
 "Tru64"

	)

252 #–ià
defšed
(
__riscos
è|| defšed(
__riscos__
)

253 
	#PLATFORM_ID
 "RISCos"

	)

255 #–ià
defšed
(
__sšix
è|| defšed(
__sšix__
è|| defšed(
__SINIX__
)

256 
	#PLATFORM_ID
 "SINIX"

	)

258 #–ià
defšed
(
__UNIX_SV__
)

259 
	#PLATFORM_ID
 "UNIX_SV"

	)

261 #–ià
defšed
(
__bsdos__
)

262 
	#PLATFORM_ID
 "BSDOS"

	)

264 #–ià
defšed
(
_MPRAS
è|| defšed(
MPRAS
)

265 
	#PLATFORM_ID
 "MP-RAS"

	)

267 #–ià
defšed
(
__osf
è|| defšed(
__osf__
)

268 
	#PLATFORM_ID
 "OSF1"

	)

270 #–ià
defšed
(
_SCO_SV
è|| defšed(
SCO_SV
è|| defšed(
sco_sv
)

271 
	#PLATFORM_ID
 "SCO_SV"

	)

273 #–ià
defšed
(
__uÉrix
è|| defšed(
__uÉrix__
è|| defšed(
_ULTRIX
)

274 
	#PLATFORM_ID
 "ULTRIX"

	)

276 #–ià
defšed
(
__XENIX__
è|| defšed(
_XENIX
è|| defšed(
XENIX
)

277 
	#PLATFORM_ID
 "X’ix"

	)

280 
	#PLATFORM_ID
 ""

	)

289 #ià
defšed
(
_WIN32
è&& defšed(
_MSC_VER
)

290 #ià
defšed
(
_M_IA64
)

291 
	#ARCHITECTURE_ID
 "IA64"

	)

293 #–ià
defšed
(
_M_X64
è|| defšed(
_M_AMD64
)

294 
	#ARCHITECTURE_ID
 "x64"

	)

296 #–ià
defšed
(
_M_IX86
)

297 
	#ARCHITECTURE_ID
 "X86"

	)

299 #–ià
defšed
(
_M_ARM
)

300 
	#ARCHITECTURE_ID
 "ARM"

	)

302 #–ià
defšed
(
_M_MIPS
)

303 
	#ARCHITECTURE_ID
 "MIPS"

	)

305 #–ià
defšed
(
_M_SH
)

306 
	#ARCHITECTURE_ID
 "SHx"

	)

309 
	#ARCHITECTURE_ID
 ""

	)

313 
	#ARCHITECTURE_ID
 ""

	)

317 
	#DEC
(
n
) \

318 ('0' + (((
n
) / 10000000)%10)), \

319 ('0' + (((
n
) / 1000000)%10)), \

320 ('0' + (((
n
) / 100000)%10)), \

321 ('0' + (((
n
) / 10000)%10)), \

322 ('0' + (((
n
) / 1000)%10)), \

323 ('0' + (((
n
) / 100)%10)), \

324 ('0' + (((
n
) / 10)%10)), \

325 ('0' + ((
n
è% 10))

	)

328 
	#HEX
(
n
) \

329 ('0' + ((
n
)>>28 & 0xF)), \

330 ('0' + ((
n
)>>24 & 0xF)), \

331 ('0' + ((
n
)>>20 & 0xF)), \

332 ('0' + ((
n
)>>16 & 0xF)), \

333 ('0' + ((
n
)>>12 & 0xF)), \

334 ('0' + ((
n
)>>8 & 0xF)), \

335 ('0' + ((
n
)>>4 & 0xF)), \

336 ('0' + ((
n
è& 0xF))

	)

339 #ifdeà
COMPILER_VERSION_MAJOR


340 cÚ¡ 
	gšfo_v”siÚ
[] = {

343 
COMPILER_VERSION_MAJOR
,

344 #ifdeà
COMPILER_VERSION_MINOR


345 '.', 
COMPILER_VERSION_MINOR
,

346 #ifdeà
COMPILER_VERSION_PATCH


347 '.', 
COMPILER_VERSION_PATCH
,

348 #ifdeà
COMPILER_VERSION_TWEAK


349 '.', 
COMPILER_VERSION_TWEAK
,

360 cÚ¡* 
	gšfo_¶©fÜm
 = "INFO" ":" "¶©fÜm[" 
PLATFORM_ID
 "]";

361 cÚ¡* 
	gšfo_¬ch
 = "INFO" ":" "¬ch[" 
ARCHITECTURE_ID
 "]";

367 
	$maš
(
¬gc
, * 
¬gv
[])

369 
»quœe
 = 0;

370 
»quœe
 +ð
šfo_compž”
[
¬gc
];

371 
»quœe
 +ð
šfo_¶©fÜm
[
¬gc
];

372 #ifdeà
COMPILER_VERSION_MAJOR


373 
»quœe
 +ð
šfo_v”siÚ
[
¬gc
];

375 ()
¬gv
;

376  
»quœe
;

377 
	}
}

	@include/String.hpp

1 #iâdeà
STRING_HPP_


2 
	#STRING_HPP_


	)

3 þas 
	cSŒšg
{

4 
	m´iv©e
:

5 *
¡r
;

6 
	mpublic
:

7 
SŒšg
();

8 * 
	mÝ”©Ü
=(cÚ¡ *
s
);

9 
	mSŒšg
& 
	mÝ”©Ü
=(cÚ¡ 
SŒšg
 &
s
);

10 cÚ¡ *
c_¡r
();

11 ~
SŒšg
();

12 
´štV®ue
();

	@main.cpp

6 
	~"šþude/SŒšg.hµ
"

7 
	~<io¡»am
>

10 
	$maš
()

12 
SŒšg
 
s1
;

13 
s1
 = "abcdef";

14 
¡d
::
cout
<<
s1
.
	`c_¡r
()<<¡d::
’dl
;

16 
SŒšg
 
s2
;

17 
s2
 = "good†uck";

18 
¡d
::
cout
<<
s2
.
	`c_¡r
()<<¡d::
’dl
;

20 
s1
 = 
s2
;

21 
¡d
::
cout
<<
s1
.
	`c_¡r
()<<¡d::
’dl
;

22 
¡d
::
cout
<<
s2
.
	`c_¡r
()<<¡d::
’dl
;

27 
	}
}

	@src/String.cpp

1 
	~"../šþude/SŒšg.hµ
"

2 
	~<io¡»am
>

3 
	~<¡ršg.h
>

4 
usšg
 
Çme¥aû
 
	g¡d
;

5 
	gSŒšg
::
	$SŒšg
()

7 
¡r
 = 
NULL
;

8 
	}
}

9 
	gSŒšg
::~
	$SŒšg
()

11 if(
¡r
)

12 
d–‘e
 []
¡r
;

13 
	}
}

14 * 
	gSŒšg
::
Ý”©Ü
=(cÚ¡ *
s
)

16 if(
¡r
)

17 
d–‘e
 []
¡r
;

18 if(
	gs
)

20 
	g¡r
 = 
Ãw
 [
¡¾’
(
s
) + 1];

21 
¡rýy
(
¡r
,
s
);

25 
	g¡r
 = 
NULL
;

27  
	g¡r
;

29 
	gSŒšg
::
	$´štV®ue
()

31 
¡d
::
cout
<<
¡r
<<¡d::
’dl
;

32 
	}
}

33 cÚ¡ * 
	gSŒšg
::
	$c_¡r
()

35  
¡r
;

36 
	}
}

37 
	gSŒšg
& SŒšg::
Ý”©Ü
=(cÚ¡ 
SŒšg
 &
s
)

39 if(
¡r
 =ð
s
.¡rè *
this
;

40 if(
	g¡r
è
	gd–‘e
 []str;

41 if(
	gs
.
	g¡r
) {

42 
	g¡r
 = 
Ãw
 [
¡¾’
(
s
.
¡r
) + 1];

43 
¡rýy
(
¡r
,
s
.str);

46 
	g¡r
 = 
NULL
;

47  *
	gthis
;

	@/usr/include/string.h

22 #iâdef 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<ã©u»s.h
>

27 
	g__BEGIN_DECLS


30 
	#__Ãed_size_t


	)

31 
	#__Ãed_NULL


	)

32 
	~<¡ddef.h
>

39 #ià
defšed
 
__ýlu¥lus
 && (__ýlu¥lu >ð199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$memýy
 (*
__»¡riù
 
__de¡
, cÚ¡ *__»¡riù 
__¤c
,

47 
size_t
 
__n
è
__THROW
 
	`__nÚnuÎ
 ((1, 2));

50 *
	$memmove
 (*
__de¡
, cÚ¡ *
__¤c
, 
size_t
 
__n
)

51 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #ià
defšed
 
__USE_SVID
 || defšed 
__USE_BSD
 || defšed 
__USE_XOPEN


58 *
	$memcýy
 (*
__»¡riù
 
__de¡
, cÚ¡ *__»¡riù 
__¤c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
è
__THROW
 
	`__nÚnuÎ
 ((1));

69 
	$memcmp
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

73 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

78 cÚ¡ *
	`memchr
 (cÚ¡ *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

81 #ifdeà
__OPTIMIZE__


82 
__ex‹º_®ways_šlše
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
è
__THROW


85  
	`__bužtš_memchr
 (
__s
, 
__c
, 
__n
);

88 
__ex‹º_®ways_šlše
 const *

89 
	`memchr
 (cÚ¡ *
__s
, 
__c
, 
size_t
 
__n
è
__THROW


91  
	`__bužtš_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (cÚ¡ *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifdeà
__USE_GNU


104 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$¿wmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("¿wmemchr"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

107 "C++" cÚ¡ *
	$¿wmemchr
 (cÚ¡ *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("¿wmemchr"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

110 *
	$¿wmemchr
 (cÚ¡ *
__s
, 
__c
)

111 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

115 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

118 "C++" cÚ¡ *
	$memrchr
 (cÚ¡ *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

121 *
	$memrchr
 (cÚ¡ *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$¡rýy
 (*
__»¡riù
 
__de¡
, cÚ¡ *__»¡riù 
__¤c
)

130 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

132 *
	$¡ºýy
 (*
__»¡riù
 
__de¡
,

133 cÚ¡ *
__»¡riù
 
__¤c
, 
size_t
 
__n
)

134 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

137 *
	$¡rÿt
 (*
__»¡riù
 
__de¡
, cÚ¡ *__»¡riù 
__¤c
)

138 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

140 *
	$¡ºÿt
 (*
__»¡riù
 
__de¡
, cÚ¡ *__»¡riù 
__¤c
,

141 
size_t
 
__n
è
__THROW
 
	`__nÚnuÎ
 ((1, 2));

144 
	$¡rcmp
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
)

145 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

147 
	$¡ºcmp
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

151 
	$¡rcÞl
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
)

152 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

154 
size_t
 
	$¡rxäm
 (*
__»¡riù
 
__de¡
,

155 cÚ¡ *
__»¡riù
 
__¤c
, 
size_t
 
__n
)

156 
__THROW
 
	`__nÚnuÎ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifdeà
__USE_XOPEN2K8


163 
	~<xloÿË.h
>

166 
	$¡rcÞl_l
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
, 
__loÿË_t
 
__l
)

167 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2, 3));

169 
size_t
 
	$¡rxäm_l
 (*
__de¡
, cÚ¡ *
__¤c
, 
size_t
 
__n
,

170 
__loÿË_t
 
__l
è
__THROW
 
	`__nÚnuÎ
 ((2, 4));

173 #ià
defšed
 
__USE_SVID
 || defšed 
__USE_BSD
 || defšed 
__USE_XOPEN_EXTENDED
 \

174 || 
defšed
 
__USE_XOPEN2K8


176 *
	$¡rdup
 (cÚ¡ *
__s
)

177 
__THROW
 
__©Œibu‹_m®loc__
 
	`__nÚnuÎ
 ((1));

183 #ià
defšed
 
__USE_XOPEN2K8


184 *
	$¡ºdup
 (cÚ¡ *
__¡ršg
, 
size_t
 
__n
)

185 
__THROW
 
__©Œibu‹_m®loc__
 
	`__nÚnuÎ
 ((1));

188 #ià
defšed
 
__USE_GNU
 && defšed 
__GNUC__


190 
	#¡rdu·
(
s
) \

191 (
__ex‹nsiÚ__
 \

193 cÚ¡ *
__Þd
 = (
s
); \

194 
size_t
 
__Ën
 = 
	`¡¾’
 (
__Þd
) + 1; \

195 *
__Ãw
 = (*è
	`__bužtš_®loÿ
 (
__Ën
); \

196 (*è
	`memýy
 (
__Ãw
, 
__Þd
, 
__Ën
); \

197 
	}
}))

	)

200 
	#¡ºdu·
(
s
, 
n
) \

201 (
__ex‹nsiÚ__
 \

203 cÚ¡ *
__Þd
 = (
s
); \

204 
size_t
 
__Ën
 = 
	`¡ºËn
 (
__Þd
, (
n
)); \

205 *
__Ãw
 = (*è
	`__bužtš_®loÿ
 (
__Ën
 + 1); \

206 
__Ãw
[
__Ën
] = '\0'; \

207 (*è
	`memýy
 (
__Ãw
, 
__Þd
, 
__Ën
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
¡rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("¡rchr"è
__©Œibu‹_pu»__
 
__nÚnuÎ
 ((1));

218 cÚ¡ *
¡rchr
 (cÚ¡ *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("¡rchr"è
__©Œibu‹_pu»__
 
__nÚnuÎ
 ((1));

221 #ifdeà
__OPTIMIZE__


222 
__ex‹º_®ways_šlše
 *

223 
¡rchr
 (*
__s
, 
__c
è
	g__THROW


225  
__bužtš_¡rchr
 (
__s
, 
__c
);

228 
__ex‹º_®ways_šlše
 const *

229 
¡rchr
 (cÚ¡ *
__s
, 
__c
è
	g__THROW


231  
__bužtš_¡rchr
 (
__s
, 
__c
);

236 *
	$¡rchr
 (cÚ¡ *
__s
, 
__c
)

237 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

240 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`¡¼chr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("¡¼chr"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

245 cÚ¡ *
	`¡¼chr
 (cÚ¡ *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("¡¼chr"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

248 #ifdeà
__OPTIMIZE__


249 
__ex‹º_®ways_šlše
 *

250 
	`¡¼chr
 (*
__s
, 
__c
è
__THROW


252  
	`__bužtš_¡¼chr
 (
__s
, 
__c
);

255 
__ex‹º_®ways_šlše
 const *

256 
	`¡¼chr
 (cÚ¡ *
__s
, 
__c
è
__THROW


258  
	`__bužtš_¡¼chr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$¡¼chr
 (cÚ¡ *
__s
, 
__c
)

264 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifdeà
__USE_GNU


271 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$¡rchºul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("¡rchºul"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

274 "C++" cÚ¡ *
	$¡rchºul
 (cÚ¡ *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("¡rchºul"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

277 *
	$¡rchºul
 (cÚ¡ *
__s
, 
__c
)

278 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$¡rc¥n
 (cÚ¡ *
__s
, cÚ¡ *
__»jeù
)

286 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

289 
size_t
 
	$¡r¥n
 (cÚ¡ *
__s
, cÚ¡ *
__acû±
)

290 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

292 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`¡½brk
 (*
__s
, cÚ¡ *
__acû±
)

296 
__THROW
 
	`__asm
 ("¡½brk"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

297 cÚ¡ *
	`¡½brk
 (cÚ¡ *
__s
, cÚ¡ *
__acû±
)

298 
__THROW
 
	`__asm
 ("¡½brk"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

300 #ifdeà
__OPTIMIZE__


301 
__ex‹º_®ways_šlše
 *

302 
	`¡½brk
 (*
__s
, cÚ¡ *
__acû±
è
__THROW


304  
	`__bužtš_¡½brk
 (
__s
, 
__acû±
);

307 
__ex‹º_®ways_šlše
 const *

308 
	`¡½brk
 (cÚ¡ *
__s
, cÚ¡ *
__acû±
è
__THROW


310  
	`__bužtš_¡½brk
 (
__s
, 
__acû±
);

313 
	}
}

315 *
	$¡½brk
 (cÚ¡ *
__s
, cÚ¡ *
__acû±
)

316 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

319 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`¡r¡r
 (*
__hay¡ack
, cÚ¡ *
__ÃedË
)

323 
__THROW
 
	`__asm
 ("¡r¡r"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

324 cÚ¡ *
	`¡r¡r
 (cÚ¡ *
__hay¡ack
, cÚ¡ *
__ÃedË
)

325 
__THROW
 
	`__asm
 ("¡r¡r"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

327 #ifdeà
__OPTIMIZE__


328 
__ex‹º_®ways_šlše
 *

329 
	`¡r¡r
 (*
__hay¡ack
, cÚ¡ *
__ÃedË
è
__THROW


331  
	`__bužtš_¡r¡r
 (
__hay¡ack
, 
__ÃedË
);

334 
__ex‹º_®ways_šlše
 const *

335 
	`¡r¡r
 (cÚ¡ *
__hay¡ack
, cÚ¡ *
__ÃedË
è
__THROW


337  
	`__bužtš_¡r¡r
 (
__hay¡ack
, 
__ÃedË
);

340 
	}
}

342 *
	$¡r¡r
 (cÚ¡ *
__hay¡ack
, cÚ¡ *
__ÃedË
)

343 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

348 *
	$¡¹ok
 (*
__»¡riù
 
__s
, cÚ¡ *__»¡riù 
__d–im
)

349 
__THROW
 
	`__nÚnuÎ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__¡¹ok_r
 (*
__»¡riù
 
__s
,

355 cÚ¡ *
__»¡riù
 
__d–im
,

356 **
__»¡riù
 
__§ve_±r
)

357 
__THROW
 
	`__nÚnuÎ
 ((2, 3));

358 #ià
defšed
 
__USE_POSIX
 || defšed 
__USE_MISC


359 *
	$¡¹ok_r
 (*
__»¡riù
 
__s
, cÚ¡ *__»¡riù 
__d–im
,

360 **
__»¡riù
 
__§ve_±r
)

361 
__THROW
 
	`__nÚnuÎ
 ((2, 3));

364 #ifdeà
__USE_GNU


366 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$¡rÿ£¡r
 (*
__hay¡ack
, cÚ¡ *
__ÃedË
)

368 
__THROW
 
	`__asm
 ("¡rÿ£¡r"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

369 "C++" cÚ¡ *
	$¡rÿ£¡r
 (cÚ¡ *
__hay¡ack
,

370 cÚ¡ *
__ÃedË
)

371 
__THROW
 
	`__asm
 ("¡rÿ£¡r"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

373 *
	$¡rÿ£¡r
 (cÚ¡ *
__hay¡ack
, cÚ¡ *
__ÃedË
)

374 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

378 #ifdeà
__USE_GNU


382 *
	$memmem
 (cÚ¡ *
__hay¡ack
, 
size_t
 
__hay¡ackËn
,

383 cÚ¡ *
__ÃedË
, 
size_t
 
__ÃedËËn
)

384 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 3));

388 *
	$__mempýy
 (*
__»¡riù
 
__de¡
,

389 cÚ¡ *
__»¡riù
 
__¤c
, 
size_t
 
__n
)

390 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

391 *
	$mempýy
 (*
__»¡riù
 
__de¡
,

392 cÚ¡ *
__»¡riù
 
__¤c
, 
size_t
 
__n
)

393 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$¡¾’
 (cÚ¡ *
__s
)

400 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$¡ºËn
 (cÚ¡ *
__¡ršg
, 
size_t
 
__maxËn
)

407 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$¡»¼Ü
 (
__”ºum
è
__THROW
;

414 
__END_NAMESPACE_STD


415 #ià
defšed
 
__USE_XOPEN2K
 || defšed 
__USE_MISC


423 #ià
defšed
 
__USE_XOPEN2K
 && !defšed 
__USE_GNU


426 #ifdeà
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
¡»¼Ü_r
,

428 (
__”ºum
, *
__buf
, 
size_t
 
__buæ’
),

429 
__xpg_¡»¼Ü_r
è
	`__nÚnuÎ
 ((2));

431 
	$__xpg_¡»¼Ü_r
 (
__”ºum
, *
__buf
, 
size_t
 
__buæ’
)

432 
__THROW
 
	`__nÚnuÎ
 ((2));

433 
	#¡»¼Ü_r
 
__xpg_¡»¼Ü_r


	)

438 *
	$¡»¼Ü_r
 (
__”ºum
, *
__buf
, 
size_t
 
__buæ’
)

439 
__THROW
 
	`__nÚnuÎ
 ((2)è
__wur
;

443 #ifdeà
__USE_XOPEN2K8


445 *
	$¡»¼Ü_l
 (
__”ºum
, 
__loÿË_t
 
__l
è
__THROW
;

451 
	$__bz”o
 (*
__s
, 
size_t
 
__n
è
__THROW
 
	`__nÚnuÎ
 ((1));

453 #ifdeà
__USE_BSD


455 
	$bcÝy
 (cÚ¡ *
__¤c
, *
__de¡
, 
size_t
 
__n
)

456 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

459 
	$bz”o
 (*
__s
, 
size_t
 
__n
è
__THROW
 
	`__nÚnuÎ
 ((1));

462 
	$bcmp
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

466 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`šdex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("šdex"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

471 cÚ¡ *
	`šdex
 (cÚ¡ *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("šdex"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

474 #ià
defšed
 
__OPTIMIZE__
 && !defšed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__ex‹º_®ways_šlše
 *

476 
	`šdex
 (*
__s
, 
__c
è
__THROW


478  
	`__bužtš_šdex
 (
__s
, 
__c
);

481 
__ex‹º_®ways_šlše
 const *

482 
	`šdex
 (cÚ¡ *
__s
, 
__c
è
__THROW


484  
	`__bužtš_šdex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$šdex
 (cÚ¡ *
__s
, 
__c
)

490 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

494 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`ršdex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("ršdex"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

499 cÚ¡ *
	`ršdex
 (cÚ¡ *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("ršdex"è
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

502 #ià
defšed
 
__OPTIMIZE__
 && !defšed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__ex‹º_®ways_šlše
 *

504 
	`ršdex
 (*
__s
, 
__c
è
__THROW


506  
	`__bužtš_ršdex
 (
__s
, 
__c
);

509 
__ex‹º_®ways_šlše
 const *

510 
	`ršdex
 (cÚ¡ *
__s
, 
__c
è
__THROW


512  
	`__bužtš_ršdex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$ršdex
 (cÚ¡ *
__s
, 
__c
)

518 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1));

523 
	$ffs
 (
__i
è
__THROW
 
	`__©Œibu‹__
 ((
__cÚ¡__
));

527 #ifdef 
__USE_GNU


528 
	$ff¦
 (
__l
è
__THROW
 
	`__©Œibu‹__
 ((
__cÚ¡__
));

529 
__ex‹nsiÚ__
 
	$ff¦l
 (
__Î
)

530 
__THROW
 
	`__©Œibu‹__
 ((
__cÚ¡__
));

534 
	$¡rÿ£cmp
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
)

535 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

538 
	$¡ºÿ£cmp
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$¡rÿ£cmp_l
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
,

546 
__loÿË_t
 
__loc
)

547 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2, 3));

549 
	$¡ºÿ£cmp_l
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
,

550 
size_t
 
__n
, 
__loÿË_t
 
__loc
)

551 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$¡r£p
 (**
__»¡riù
 
__¡ršgp
,

558 cÚ¡ *
__»¡riù
 
__d–im
)

559 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$¡rsigÇl
 (
__sig
è
__THROW
;

567 *
	$__¡pýy
 (*
__»¡riù
 
__de¡
, cÚ¡ *__»¡riù 
__¤c
)

568 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

569 *
	$¡pýy
 (*
__»¡riù
 
__de¡
, cÚ¡ *__»¡riù 
__¤c
)

570 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

574 *
	$__¡²ýy
 (*
__»¡riù
 
__de¡
,

575 cÚ¡ *
__»¡riù
 
__¤c
, 
size_t
 
__n
)

576 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

577 *
	$¡²ýy
 (*
__»¡riù
 
__de¡
,

578 cÚ¡ *
__»¡riù
 
__¤c
, 
size_t
 
__n
)

579 
__THROW
 
	`__nÚnuÎ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$¡rv”scmp
 (cÚ¡ *
__s1
, cÚ¡ *
__s2
)

585 
__THROW
 
__©Œibu‹_pu»__
 
	`__nÚnuÎ
 ((1, 2));

588 *
	$¡räy
 (*
__¡ršg
è
__THROW
 
	`__nÚnuÎ
 ((1));

591 *
	$memäob
 (*
__s
, 
size_t
 
__n
è
__THROW
 
	`__nÚnuÎ
 ((1));

593 #iâdeà
ba£Çme


598 #ifdeà
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£Çme
 (*
__fž’ame
)

600 
__THROW
 
	`__asm
 ("ba£Çme"è
	`__nÚnuÎ
 ((1));

601 "C++" cÚ¡ *
	$ba£Çme
 (cÚ¡ *
__fž’ame
)

602 
__THROW
 
	`__asm
 ("ba£Çme"è
	`__nÚnuÎ
 ((1));

604 *
	$ba£Çme
 (cÚ¡ *
__fž’ame
è
__THROW
 
	`__nÚnuÎ
 ((1));

610 #ià
defšed
 
__GNUC__
 && __GNUC__ >= 2

611 #ià
defšed
 
__OPTIMIZE__
 && !defšed 
__OPTIMIZE_SIZE__
 \

612 && !
defšed
 
__NO_INLINE__
 && !defšed 
__ýlu¥lus


632 
	~<b™s/¡ršg.h
>

635 
	~<b™s/¡ršg2.h
>

638 #ià
__USE_FORTIFY_LEVEL
 > 0 && 
defšed
 
__fÜtify_funùiÚ


640 
	~<b™s/¡ršg3.h
>

644 
__END_DECLS


	@/usr/include/features.h

18 #iâdef 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #undeà
__USE_ISOC11


102 #undeà
__USE_ISOC99


103 #undeà
__USE_ISOC95


104 #undeà
__USE_ISOCXX11


105 #undeà
__USE_POSIX


106 #undeà
__USE_POSIX2


107 #undeà
__USE_POSIX199309


108 #undeà
__USE_POSIX199506


109 #undeà
__USE_XOPEN


110 #undeà
__USE_XOPEN_EXTENDED


111 #undeà
__USE_UNIX98


112 #undeà
__USE_XOPEN2K


113 #undeà
__USE_XOPEN2KXSI


114 #undeà
__USE_XOPEN2K8


115 #undeà
__USE_XOPEN2K8XSI


116 #undeà
__USE_LARGEFILE


117 #undeà
__USE_LARGEFILE64


118 #undeà
__USE_FILE_OFFSET64


119 #undeà
__USE_BSD


120 #undeà
__USE_SVID


121 #undeà
__USE_MISC


122 #undeà
__USE_ATFILE


123 #undeà
__USE_GNU


124 #undeà
__USE_REENTRANT


125 #undeà
__USE_FORTIFY_LEVEL


126 #undeà
__KERNEL_STRICT_NAMES


130 #iâdeà
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #ià
defšed
 
__GNUC__
 && defšed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mš
) \

143 ((
__GNUC__
 << 16è+ 
__GNUC_MINOR__
 >ð((
maj
è<< 16è+ (
mš
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mš
è0

	)

150 #ifdeà
_GNU_SOURCE


151 #undeà
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #undeà
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #undeà
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #undeà
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #undeà
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #undeà
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #undeà
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #undeà
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #undeà
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #undeà
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #undeà
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #undeà
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #ià(
defšed
 
_DEFAULT_SOURCE
 \

180 || (!
defšed
 
	g__STRICT_ANSI__
 \

181 && !
defšed
 
	g_ISOC99_SOURCE
 \

182 && !
defšed
 
	g_POSIX_SOURCE
 && !defšed 
	g_POSIX_C_SOURCE
 \

183 && !
defšed
 
	g_XOPEN_SOURCE
 \

184 && !
defšed
 
	g_BSD_SOURCE
 && !defšed 
	g_SVID_SOURCE
))

185 #undeà
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #undeà
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #undeà
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #ià(
defšed
 
_ISOC11_SOURCE
 \

195 || (
defšed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #ià(
defšed
 
_ISOC99_SOURCE
 || defšed 
_ISOC11_SOURCE
 \

201 || (
defšed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #ià(
defšed
 
_ISOC99_SOURCE
 || defšed 
_ISOC11_SOURCE
 \

207 || (
defšed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #ià((
defšed
 
__ýlu¥lus
 && __cplusplus >= 201103L) \

216 || 
defšed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifdeà
_DEFAULT_SOURCE


224 #ià!
defšed
 
_POSIX_SOURCE
 && !defšed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #undeà
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #undeà
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #ià((!
defšed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
defšed
 
_POSIX_SOURCE
 && !defšed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #ià
defšed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #–ià
defšed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #–ià
defšed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #ià
defšed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >ð1 || defšed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #ià
defšed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >ð2 || defšed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #ià(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #ià(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #ià(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #undeà
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #undeà
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #ià(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #undeà
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #ià(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #undeà
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #ià(
_XOPEN_SOURCE
 - 0) >= 600

285 #ià(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #undeà
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #undeà
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifdeà
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifdeà
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifdeà
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #ià
defšed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #ià
defšed
 
_BSD_SOURCE
 || defšed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #ià
defšed
 
_REENTRANT
 || defšed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #ià
defšed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1è&& 
defšed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #ià
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<¡dc-´edef.h
>

360 #undeà
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mš
) \

369 ((
__GLIBC__
 << 16è+ 
__GLIBC_MINOR__
 >ð((
maj
è<< 16è+ (
mš
))

	)

372 #iâdeà
__ASSEMBLER__


373 #iâdeà
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #ià
defšed
 
__USE_FILE_OFFSET64
 && !defšed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #ià
__GNUC_PREREQ
 (2, 7è&& 
defšed
 
__OPTIMIZE__
 \

388 && !
defšed
 
	g__OPTIMIZE_SIZE__
 && !defšed 
	g__NO_INLINE__
 \

389 && 
defšed
 
	g__ex‹º_šlše


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/¡ubs.h
>

	@/usr/include/xlocale.h

20 #iâdeà
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loÿË_¡ruù


30 
__loÿË_d©a
 *
	m__loÿËs
[13];

33 cÚ¡ *
	m__ùy³_b
;

34 cÚ¡ *
	m__ùy³_tÞow”
;

35 cÚ¡ *
	m__ùy³_touµ”
;

38 cÚ¡ *
	m__Çmes
[13];

39 } *
	t__loÿË_t
;

42 
__loÿË_t
 
	tloÿË_t
;

	@/usr/include/stdc-predef.h

18 #iâdef 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifdeà
__GCC_IEC_559


37 #ià
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifdeà
__GCC_IEC_559_COMPLEX


45 #ià
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@
1
.
1
/usr/include
9
259
build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c
build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
include/String.hpp
main.cpp
src/String.cpp
/usr/include/string.h
/usr/include/features.h
/usr/include/xlocale.h
/usr/include/stdc-predef.h
